 ############
 event basics
 ############

 the delegation event model
 ==========================

 The morder approach to handling events is based on the 
 delegation event model.
 Its concept is quite simple: 
 a source generates an event and sends it to one or more listeners.
 -----------------------------------------------------------------

 In this scheme, the listener simply waits until it receives an event
 One an event is received, the listener processes the event and 
 then returns.

 In the delegatio event model, listeners must register with a source
 in order to receive an event notification.


 events
 ======

 An "event" is an object that describes a state change in a source.


 event sources
 =============

 A "source" is an object that generates an event. This occurs when
 the internal state of that object changes in some way.

 A source must register listeners in order for the listeners to
 receive notifications about a specific type of event.  
 Each type of event has its own registration method.
 Here is the general form
 ----------------------------------------------------------------
 | public void add"Type"Listener ("Type"Listener el)            |
 ----------------------------------------------------------------
 Here, "Type" is the name of the event, and "el" is a reference
 to the event listener.

 When an event occurs, all registered listeners are notified and
 receive a copy of the event object. This is known as "multicasting"
 the event. In all cases, notifications are sent only to listeners
 that register to receive them.

 Some sources may allow only one listener to register.
 This is known as "unicasting" the event.

 A source must also provide a method that allows a listener to
 unregister an interest in specific type of event.


 event listeners
 ===============

 A "listener" is an object that is notified when an event occurs.

 It has two major requirements.
 First, it must have been registered with one or more sources
 to receive notifications about specific types of events.
 Second, it must implement methods to receive and process these
 notifications.


